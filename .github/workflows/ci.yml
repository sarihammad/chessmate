name: CI
on:
  push: { branches: [main] }
  pull_request: {}

jobs:
  build-test:
    strategy:
      matrix:
        os: [ubuntu-latest, macos-latest, windows-latest]
    runs-on: ${{ matrix.os }}
    steps:
      - uses: actions/checkout@v4
      - uses: lukka/get-cmake@latest
      - name: Install system dependencies (Ubuntu)
        if: runner.os == 'Linux'
        run: |
          sudo apt-get update
          sudo apt-get install -y libx11-dev libxrandr-dev libxcursor-dev libxi-dev libgl1-mesa-dev libudev-dev libfreetype6-dev libflac-dev libogg-dev libvorbis-dev libopenal-dev
      - name: Configure
        run: cd game && cmake --preset dev "-DCMAKE_POLICY_VERSION_MINIMUM=3.5"
      - name: Build
        run: cd game && cmake --build build/dev -j 4
      - name: Test
        run: cd game && ctest --test-dir build/dev --output-on-failure

  asan:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - uses: lukka/get-cmake@latest
      - name: Install system dependencies
        run: |
          sudo apt-get update
          sudo apt-get install -y libx11-dev libxrandr-dev libxcursor-dev libxi-dev libgl1-mesa-dev libudev-dev libfreetype6-dev libflac-dev libogg-dev libvorbis-dev libopenal-dev
      - name: Configure (ASAN)
        run: cd game && cmake --preset asan "-DCMAKE_POLICY_VERSION_MINIMUM=3.5"
      - name: Build (ASAN)
        run: cd game && cmake --build build/asan -j 4
      - name: Test (ASAN)
        run: cd game && ctest --test-dir build/asan --output-on-failure
